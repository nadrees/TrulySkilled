@model Guid

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Tic-Tac-Toe";
}

@section styles {
    <style type="text/css">
        #gameBoard {
            margin-left: auto;
            margin-right: auto;
            text-align: center;
        }
    </style>
}

@section scripts {
    @Scripts.Render("~/bundles/TicTacToeBundle")
    <script type="text/javascript" src="~/signalr/hubs"></script>
    <script type="text/javascript">
        var gameId = "@Model";

        function viewModel() {
            var self = this;

            self.gameHasStarted = ko.observable(false);

            // info message
            self.infoMessage = ko.observable();
            self.infoMessageIsDismissable = ko.observable(true);
        }

        var hub = $.connection.ticTacToeGameHub;
        hub.client.setAwaitingPlayers = function (players) {
            // called when a player arives in the lobby
            var message = "Waiting for players ";
            for (i = 0; i < players.length; i++) {
                message += players[i];
                if (i != players.length - 1) {
                    message += ",";
                }
            }
            message += " to arrive.";

            vm.infoMessageIsDismissable(false);
            vm.infoMessage(message);
        };
        hub.client.beginGame = function() {
            // called when game should be starting

            vm.infoMessage(null);
            vm.gameHasStarted(true);
        };

        var vm = new viewModel();
        window.chat.init(vm, hub);
        window.board.init("gameBoard", 250, 250);
        ko.applyBindings(vm);

        $.connection.hub.start().done(function () {
            window.chat.start('tic-tac-toe-' + gameId);
            hub.server.userArrived(gameId);
        });
    </script>
}

<div class="row-fluid" data-bind="visible: !gameHasStarted()">
    @Html.ActionLink("Return to lobby", "Index")
</div>
<div class="row-fluid" data-bind="visible: gameHasStarted">
    <div id="gameBoard"></div>
</div>
<div class="row-fluid" data-bind="visible: infoMessage() != null && infoMessage().length > 0">
    <div class="alert alert-info span12">
        <span data-bind="text: infoMessage"></span>
        <button type="button" class="close" id="info-close" data-bind="visible: infoMessageIsDismissable">&times;</button>
    </div>
</div>

@Html.Partial("_Chat")